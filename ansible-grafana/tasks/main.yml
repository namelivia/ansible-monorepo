---
- name: 'Check mandatory variables are defined'
  assert:
    that:
      - application_name is defined
      - docker_network_name is defined
      - loki_url is defined
      - admin_user is defined
      - admin_password is defined
      - user is defined
      - group is defined
      - uid is defined
      - gid is defined
      - grafana_config_folder is defined

- name: Create the dockernetwork
  docker_network:
    name: "{{ docker_network_name }}"

- name: Create the files directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files"
    state: directory
    mode: "0755"
    owner: "{{ user }}"
    group: "{{ group }}"

- name: Create the data directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/data"
    state: directory
    mode: "0755"
    owner: "{{ user }}"
    group: "{{ group }}"

- name: Copy dashboards folder
  copy:
    src: "{{ grafana_config_folder }}/dashboards"
    dest: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/data"
    owner: ubuntu
    group: ubuntu
    force: true
    mode: "0644"
    directory_mode: "0775"

- name: Copy provisioning folder
  copy:
    src: "{{ grafana_config_folder }}/provisioning"
    dest: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files"
    owner: ubuntu
    group: ubuntu
    force: true
    mode: "0644"
    directory_mode: "0775"

- name: Copy configuration file
  copy:
    src: "{{ grafana_config_folder }}/grafana.ini"
    dest: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files"
    owner: ubuntu
    group: ubuntu
    force: true
    mode: "0644"

- name: Create app container
  docker_container:
    name: "{{ application_name }}"
    image: "grafana/grafana:10.3.1"
    restart_policy: "always"
    cleanup: true
    pull: true
    user: "{{ uid }}:{{ gid }}"
    exposed_ports:
      - 3000
    published_ports:
      - "0.0.0.0:{{ host_port }}:3000"
    networks:
      - name: "{{ docker_network_name }}"
    log_driver: "loki"
    log_options:
      loki-url: "{{ loki_url }}"
      loki-batch-size: "400"
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/data:/var/lib/grafana"
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/provisioning:/etc/grafana/provisioning"
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/grafana.ini:/etc/grafana/grafana.ini:ro"
    env:
      GF_SECURITY_ADMIN_USER: "{{ admin_user }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ admin_password }}"

# Restart the container so the provisioning changes are picked up
- name: Restart grafana
  command: docker restart grafana
  register: restart_grafana_result
  changed_when: restart_grafana_result.rc != 0
