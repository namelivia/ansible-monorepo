---

- name: 'Check mandatory variables are defined'
  assert:
    that:
      - alloy_host is defined
      - postgres_username is defined
      - docker_network_name is defined
      - postgres_password is defined
      - postgres_version is defined

- name: Create the dockernetwork
  community.docker.docker_network:
    name: "{{ docker_network_name }}"

- name: Create the postgres data volumne
  community.docker.docker_volume:
    name: postgres-data

- name: Create database container
  community.docker.docker_container:
    name: "postgres-database"
    image: "postgres:{{ postgres_version }}" # TODO: Align all postgres versions so I don't need to pass this
    restart_policy: "always"
    cleanup: true
    exposed_ports:
      - "5432"
    published_ports: "{{ ['0.0.0.0:5432:5432'] if should_publish_ports else [] }}"
    networks:
      - name: "{{ docker_network_name }}"
    log_driver: "syslog"
    log_options:
      syslog-address: "tcp://{{ alloy_host }}:51893"
      tag: "postgres-database"
      syslog-format: "rfc5424"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env:
      POSTGRES_USER: "{{ postgres_username }}"
      POSTGRES_PASSWORD: "{{ postgres_password }}"

- name: Create prometheus exporter container
  community.docker.docker_container:
    name: "postgres-exporter"
    image: "quay.io/prometheuscommunity/postgres-exporter:latest"
    restart_policy: "always"
    cleanup: true
    log_driver: "syslog"
    log_options:
      syslog-address: "tcp://{{ alloy_host }}:51893"
      tag: "postgres-database"
      syslog-format: "rfc5424"
    exposed_ports:
      - "9187"
    env:
      DATA_SOURCE_USER: "{{ postgres_username }}"
      DATA_SOURCE_PASS: "{{ postgres_password }}"
      DATA_SOURCE_URI: "postgres-database:5432/postgres?sslmode=disable"
    networks:
      - name: "{{ docker_network_name }}"

- name: Setup restic backups
  include_role:
    name: ansible-backups
    tasks_from: setup-restic-backups
  vars:
    file_path: "/var/lib/docker/volumes/postgres-data"
