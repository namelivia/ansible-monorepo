---

- name: 'Check mandatory variables are defined'
  assert:
    that:
      - application_name is defined
      - docker_network_name is defined
      - alloy_host is defined
      - backup_day is defined
      - host_port is defined

- name: Create the dockernetwork
  community.docker.docker_network:
    name: "{{ docker_network_name }}"

- name: Create the files directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files"
    state: directory
    mode: "0700"

- name: Create the database directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/db"
    state: directory
    mode: "0700"

- name: Create apline-mongo container
  community.docker.docker_container:
    name: "{{ application_name }}-database"
    image: "mvertes/alpine-mongo:latest"
    log_driver: "syslog"
    log_options:
      syslog-address: "tcp://{{ alloy_host }}:51893"
      syslog-format: "rfc5424"
      tag: "{{ application_name }}-database"
    restart_policy: "always"
    memory: "70MB"
    exposed_ports:
      - "27017"
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/db:/data/db"
    networks:
      - name: "{{ docker_network_name }}"

- name: Create app container
  community.docker.docker_container:
    name: "{{ application_name }}-app"
    image: "namelivia/flappysonic:latest"
    pull: true
    cleanup: true
    restart_policy: "always"
    memory: "100MB"
    log_driver: "syslog"
    log_options:
      syslog-address: "tcp://{{ alloy_host }}:51893"
      syslog-format: "rfc5424"
      tag: "{{ application_name }}-app"
    exposed_ports:
      - "60000"
    published_ports:
      - "0.0.0.0:{{ host_port }}:60000"
    networks:
      - name: "{{ docker_network_name }}"
    env:
      DATABASE_URL: "mongodb://{{ application_name }}-database/{{ application_name }}"

- name: Setup file backups
  include_role:
    name: ansible-backups
    tasks_from: setup-file-backups

- name: Setup S3 backups
  include_role:
    name: ansible-backups
    tasks_from: setup-s3-backups

- name: Setup restic backups
  include_role:
    name: ansible-backups
    tasks_from: setup-restic-backups
  vars:
    file_path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files"
