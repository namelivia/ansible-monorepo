---
- name: 'Check mandatory variables are defined'
  assert:
    that:
      - application_name is defined
      - docker_network_name is defined
      - host_port is defined
      - alloy_host is defined
      - nextauth_secret is defined
      - meili_master_key is defined
      - user is defined
      - group is defined

- name: Create the dockernetwork
  community.docker.docker_network:
    name: "{{ docker_network_name }}"

- name: Create the meilisearch volumne
  community.docker.docker_volume:
    name: meilisearch

- name: Create the data directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/data"
    state: directory
    mode: "0755"
    owner: "{{ user }}"
    group: "{{ group }}"

- name: Create web container
  community.docker.docker_container:
    name: "{{ application_name }}-web"
    image: "ghcr.io/karakeep-app/karakeep:0.26.0"
    pull: true
    cleanup: true
    log_driver: "syslog"
    log_options:
      syslog-address: "tcp://{{ alloy_host }}:51893"
      tag: "{{ application_name }}-web"
      syslog-format: "rfc5424"
    restart_policy: "always"
    published_ports:
      - "0.0.0.0:{{ host_port }}:3000"
    networks:
      - name: "{{ docker_network_name }}"
    volumes: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/data:/data"

    env:
      MEILI_ADDR: http://karakeep-meilisearch:7700
      BROWSER_WEB_URL: http://karakeep-chrome:9222
      DATA_DIR: /data
      NEXTAUTH_SECRET: "(( nextauth_secret }}"
      NEXTAUTH_URL: "http://localhost:3000"

- name: Create chrome container
  community.docker.docker_container:
    name: "{{ application_name }}-chrome"
    image: "gcr.io/zenika-hub/alpine-chrome:124"
    pull: true
    cleanup: true
    log_driver: "syslog"
    log_options:
      syslog-address: "tcp://{{ alloy_host }}:51893"
      tag: "{{ application_name }}-chrome"
      syslog-format: "rfc5424"
    restart_policy: "always"
    exposed_ports:
      - "9222"
    networks:
      - name: "{{ docker_network_name }}"
    command:
      - '--no-sandbox'
      - '--disable-gpu'
      - '--disable-dev-shm-usage'
      - '--remote-debugging-address=0.0.0.0'
      - '--remote-debugging-port=9222'
      - '--hide-scrollbars'

- name: Create meilisearch container
  community.docker.docker_container:
    name: "{{ application_name }}-meilisearch"
    image: "getmeili/meilisearch:v1.13.3"
    pull: true
    cleanup: true
    log_driver: "syslog"
    log_options:
      syslog-address: "tcp://{{ alloy_host }}:51893"
      tag: "{{ application_name }}-meilisearch"
      syslog-format: "rfc5424"
    restart_policy: "always"
    exposed_ports:
      - "7700"
    networks:
      - name: "{{ docker_network_name }}"
    env:
      MEILI_NO_ANALYTICS: "true"
      MEILI_MASTER_KEY: "{{ meili_master_key }}"
    volumes:
      - meilisearch:/meili_data
