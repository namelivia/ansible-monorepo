---
- name: 'Check mandatory variables are defined'
  assert:
    that:
      - application_name is defined
      - host_port is defined
      - docker_network_name is defined
      - cloudwatch_region is defined
      - cloudwatch_log_group is defined
      - alloy_config_path is defined
      - alloy_user is defined
      - alloy_group is defined
      - loki_network_name is defined

- name: Create the dockernetwork
  community.docker.docker_network:
    name: "{{ docker_network_name }}"

- name: Create the files directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files"
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: "0755"

- name: Copy alloy config folder
  copy:
    src: "{{ alloy_config_path }}"
    dest: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files"
    owner: "{{ alloy_user }}"
    group: "{{ alloy_group }}"
    mode: "0644"
    directory_mode: "0775"

- name: Create app container
  community.docker.docker_container:
    name: "{{ application_name }}"
    image: "grafana/alloy:v1.11.3"
    restart_policy: "always"
    cleanup: true
    pull: true
    exposed_ports:
      - 12345
      - 51893
    published_ports:
      - "0.0.0.0:{{ host_port }}:12345"
      - "0.0.0.0:51893:51893"
    networks:
      - name: "{{ docker_network_name }}"
      - name: "{{ loki_network_name }}"
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}alloy/files/alloy_config:/etc/alloy"
    log_driver: "awslogs"
    log_options:
      awslogs-region: "{{ cloudwatch_region }}"
      awslogs-group: "{{ cloudwatch_log_group }}"
      awslogs-stream: "{{ application_name }}-{{ inventory_hostname }}"
    command: >-
      run --server.http.listen-addr=0.0.0.0:12345
          --storage.path=/var/lib/alloy/data
          /etc/alloy/config.alloy

# Restart alloy
- name: Restart alloy
  command: docker restart alloy
  register: restart_alloy_result
  changed_when: restart_alloy_result.rc != 0
