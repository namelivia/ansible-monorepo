---
- name: 'Check mandatory variables are defined'
  assert:
    that:
      - alloy_host is defined
      - docker_network_name is defined
      - firefly_3_access_token is defined
      - firefly_3_url is defined
      - import_files_dir is defined
      - notifications_endpoint is defined
      - user is defined
      - group is defined

- name: Install redis-cli
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: true
  loop:
    - 'redis-tools'

- name: Create the Redis listener script
  ansible.builtin.copy:
    content: |
      #!/bin/bash
      redis-cli -h localhost -p 6379 SUBSCRIBE imports
    dest: /usr/local/bin/redis-imports-listener.sh
    mode: '0755'

- name: Create the systemd service file
  ansible.builtin.copy:
    content: |
      [Unit]
      Description=Redis "imports" Channel Listener
      After=network.target

      [Service]
      ExecStart=/usr/local/bin/redis-imports-listener.sh
      Restart=always
      User=root

      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/redis-imports-listener.service
    mode: '0644'

- name: Reload systemd to pick up the new service
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable and start the Redis listener service
  ansible.builtin.systemd:
    name: redis-imports-listener.service
    enabled: true
    state: started

- name: Create the importer directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}"
    state: directory
    mode: "0755"

- name: Create the errored files dir
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/error"
    state: directory
    mode: "0755"

- name: Create the import script
  template:
    src: import.j2
    dest: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/import"
    owner: root
    group: root
    mode: "0755"

- name: Run every 5 minutes
  cron:
    name: "Check for pending imports every 5 minutes"
    minute: "*/5"
    job: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/import"
    user: root
