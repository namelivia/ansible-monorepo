---
- name: 'Check mandatory variables are defined'
  assert:
    that:
      - alloy_host is defined
      - docker_network_name is defined

- name: Create the dockernetwork
  community.docker.docker_network:
    name: "{{ docker_network_name }}"

- name: Create the config directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}proxy"
    state: directory
    mode: "0755"

- name: Create the vhost.d directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}proxy/vhost.d"
    state: directory
    mode: "0755"

- name: Create the certs folder
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}proxy/certs"
    state: directory
    mode: "0755"

- name: Configure proxy settings
  template:
    src: proxy.j2
    dest: "{{ hostvars[inventory_hostname].working_directory }}proxy/proxy.conf"
    owner: root
    group: root
    mode: '0644'

- name: Set client max body sizes
  template:
    src: vhost.j2
    dest: "{{ hostvars[inventory_hostname].working_directory }}proxy/vhost.d/{{ item.vhost }}"
    owner: root
    group: root
    mode: '0644'
  with_items: "{{ client_max_body_sizes }}"
  when: client_max_body_sizes is defined

- name: Create nginx-proxy container
  community.docker.docker_container:
    name: "proxy"
    image: "nginxproxy/nginx-proxy:1.7.0-alpine"
    restart_policy: "always"
    memory: "50MB"
    cleanup: true
    log_driver: "syslog"
    log_options:
      syslog-address: "tcp://{{ alloy_host }}:51893"
      loki-batch-size: "400"
    networks:
      - name: "{{ docker_network_name }}"
    ports:
      - 80:80
      - 443:443
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}proxy/proxy.conf:/etc/nginx/proxy.conf"
      - "{{ hostvars[inventory_hostname].working_directory }}proxy/vhost.d:/etc/nginx/vhost.d"
      - "{{ hostvars[inventory_hostname].working_directory }}proxy/certs:/etc/nginx/certs"
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /usr/share/nginx/html
